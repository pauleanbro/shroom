import * as PIXI from "pixi.js";
import { Observable } from "rxjs";
import { RoomPosition } from "../../../types/RoomPosition";
import { EventGroupIdentifier, IEventGroup } from "../../events/interfaces/IEventGroup";
import { IEventManager } from "../../events/interfaces/IEventManager";
import { IEventManagerEvent } from "../../events/interfaces/IEventManagerEvent";
import { IEventTarget } from "../../events/interfaces/IEventTarget";
import { Rectangle } from "../IRoomRectangle";
export declare class TileCursor extends PIXI.Container implements IEventTarget, IEventGroup {
    private _eventManager;
    private _position;
    private onClick;
    private onOver;
    private onOut;
    private _roomX;
    private _roomY;
    private _roomZ;
    private _graphics;
    private _hover;
    private _subject;
    constructor(_eventManager: IEventManager, _position: RoomPosition, onClick: (position: RoomPosition) => void, onOver: (position: RoomPosition) => void, onOut: (position: RoomPosition) => void);
    getEventGroupIdentifier(): EventGroupIdentifier;
    getGroup(): IEventGroup;
    getRectangleObservable(): Observable<Rectangle | undefined>;
    getEventZOrder(): number;
    triggerPointerTargetChanged(event: IEventManagerEvent): void;
    triggerClick(event: IEventManagerEvent): void;
    triggerPointerDown(event: IEventManagerEvent): void;
    triggerPointerUp(event: IEventManagerEvent): void;
    triggerPointerOver(event: IEventManagerEvent): void;
    triggerPointerOut(event: IEventManagerEvent): void;
    createDebugSprite(): undefined;
    hits(x: number, y: number): boolean;
    getHitDetectionZIndex(): number;
    destroy(): void;
    updateTransform(): void;
    private _getCurrentRectangle;
    private _createGraphics;
    private _updateGraphics;
    private _updateHover;
    private _pointInside;
}
