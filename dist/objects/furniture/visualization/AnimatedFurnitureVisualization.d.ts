import { IFurnitureVisualizationLayer } from "../IFurnitureVisualizationView";
import { FurnitureVisualization } from "./FurnitureVisualization";
export declare class AnimatedFurnitureVisualization extends FurnitureVisualization {
    private _animationQueue;
    private _animationQueueStartFrame;
    private _animationFrameCount;
    private _currentAnimationId;
    private _furnitureDrawDefintion;
    private _sprites;
    private _disableTransitions;
    private _frame;
    private _overrideAnimation;
    private _modifier;
    private _currentDirection;
    private _currentTargetAnimationId;
    private _changeAnimationCount;
    private _lastFramePlayedMap;
    private _refreshFurniture;
    constructor();
    get animationId(): number | undefined;
    set animationId(value: number | undefined);
    get modifier(): ((part: IFurnitureVisualizationLayer) => IFurnitureVisualizationLayer) | undefined;
    set modifier(value: ((part: IFurnitureVisualizationLayer) => IFurnitureVisualizationLayer) | undefined);
    setCurrentAnimation(newAnimation: number): void;
    updateAnimation(animation: string): void;
    updateDirection(direction: number): void;
    isLastFramePlayedForLayer(layerIndex: number): boolean;
    destroy(): void;
    update(): void;
    updateFrame(frame: number): void;
    isAnimated(): boolean;
    private _getCurrentProgress;
    private _setAnimation;
    private _updateLayers;
    private _updateFurniture;
    private _update;
    private _getAnimationList;
    private _updateAnimation;
}
